# Copyright (c) 2017 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

################################################################################

includes:
- ../../app_locations.yml

################################################################################

# This configuration is used whenever a general file manager
# is needed. This configuration doesn't look for files,
# but only lets you switch to a valid work area. When a user
# switches (by selecting a task), the engine is restarted, and
# another environment is loaded in. This environment will
# have another file manager app running, with different settings,
# allowing files to be loaded and saved.
#
# References to this @workfiles2 include typically appears at
# 'transit' levels in the configuration, where work normally
# doesn't happen, but you just want the user to jump to their
# work area. The work area is typically a task or pipeline step
# and these 'transit' areas can be project, shot, or sequence level.

settings.tk-multi-workfiles2.entities: &workfiles2_entities
  - caption: 'Asset Tasks'
    entity_type: Task
    filters:
      - [entity, type_is, Asset]
      - [sg_status_list, is_not, "tlg"]
    hierarchy: [entity.Asset.sg_asset_type, entity, step, content]
  - caption: 'Shot Tasks'
    entity_type: Task
    filters:
      - [entity, type_is, Shot]
      - [sg_status_list, is_not, "tlg"]
    hierarchy: [entity.Shot.sg_sequence, entity, step, content]

settings.tk-multi-workfiles2: &default_workfiles2_settings
  allow_task_creation: true
  create_new_task_hook: "{self}/create_new_task.py"
  custom_actions_hook: "{self}/custom_actions.py"
  entities: *workfiles2_entities
  file_extensions: []
  hook_copy_file: '{config}/copy_file.py'
  hook_filter_publishes: default
  hook_filter_work_files: default
  hook_scene_operation: default
  launch_at_startup: true
  my_tasks_extra_display_fields: [entity.Shot.sg_sequence.Sequence.code]
  my_tasks_filters:
    - [task_assignees, is, '{context.user}']
    - [entity, is_not, null]
    - [sg_status_list, is_not, "tlg"]
  saveas_default_name: 'hook:get_default_saveas_name'
  saveas_prefer_version_up: false
  show_my_tasks: true
  template_publish:
  template_publish_area:
  template_work_area:
  template_work:
  version_compare_ignore_fields: []
  location: "@apps.tk-multi-workfiles2.location"
  task_status_updates: {}

# task
settings.tk-multi-workfiles2.task: &default_workfiles2_task_settings
  allow_task_creation: true
  create_new_task_hook: "{self}/create_new_task.py"
  custom_actions_hook: "{self}/custom_actions.py"
  entities: *workfiles2_entities
  file_extensions: []
  hook_copy_file: '{config}/copy_file.py'
  hook_filter_publishes: default
  hook_filter_work_files: default
  hook_scene_operation: default
  launch_at_startup: true
  my_tasks_extra_display_fields: [entity.Shot.sg_sequence.Sequence.code]
  saveas_default_name: 'hook:get_default_saveas_name'
  saveas_prefer_version_up: false
  show_my_tasks: true
  template_publish_area: '{engine_name}_{env_name}_publish_area'
  template_publish: '{engine_name}_{env_name}_publish_file'
  template_work_area: '{engine_name}_{env_name}_work_area'
  template_work: '{engine_name}_{env_name}_work_file'
  location: "@apps.tk-multi-workfiles2.location"
  task_status_updates: {}

# 3dequalizer task
settings.tk-multi-workfiles2.3dequalizer.task:
  <<: *default_workfiles2_task_settings
  launch_at_startup: false
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

settings.tk-multi-workfiles2.3dequalizer:
  <<: *default_workfiles2_settings
  launch_at_startup: false
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

# houdini task
settings.tk-multi-workfiles2.houdini.task:
  <<: *default_workfiles2_task_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

settings.tk-multi-workfiles2.houdini:
  <<: *default_workfiles2_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

# maya task
settings.tk-multi-workfiles2.maya.task:
  <<: *default_workfiles2_task_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

settings.tk-multi-workfiles2.maya:
  <<: *default_workfiles2_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

# nuke
settings.tk-multi-workfiles2.nuke.task:
  <<: *default_workfiles2_task_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

settings.tk-multi-workfiles2.nuke:
  <<: *default_workfiles2_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

# nukestudio
settings.tk-multi-workfiles2.entities.nukestudio:
  - caption: 'Conform Tasks'
    entity_type: Task
    filters:
      - [step.Step.short_name, is, "conform"]
    hierarchy: [entity, content]
  - caption: 'Editorial Tasks'
    entity_type: Task
    filters:
      - [step.Step.short_name, is, "editorial"]
    hierarchy: [entity, content]

settings.tk-multi-workfiles2.nukestudio.task:
  <<: *default_workfiles2_task_settings
  file_extensions: ['hrox']
  entities: '@settings.tk-multi-workfiles2.entities.nukestudio'
  my_tasks_extra_display_fields: []
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_tk-nuke.py'

settings.tk-multi-workfiles2.nukestudio:
  <<: *default_workfiles2_settings
  file_extensions: ['hrox']
  entities: '@settings.tk-multi-workfiles2.entities.nukestudio'
  my_tasks_extra_display_fields: []
  hook_scene_operation: '{config}/tk-multi-workfiles2/task_operations_base.py:{config}/tk-multi-workfiles2/scene_operation_tk-nuke.py'

# silhouette task
settings.tk-multi-workfiles2.silhouette.task:
  <<: *default_workfiles2_task_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'

settings.tk-multi-workfiles2.silhouette:
  <<: *default_workfiles2_settings
  hook_scene_operation: '{config}/tk-multi-workfiles2/scene_operation_{engine_name}.py'